# @package _global_
# ChartGeneratorAgent专用配置 - 专业图表生成专家
defaults:
  - /model/base@model
  - /tools/tabular@toolkits.tabular
  - /tools/enhanced_python_executor@toolkits.analysis_executor
  - /tools/enhanced_chart_generator@toolkits.enhanced_chart_generator
  - /agents/workers/standard_agent_config@standard_config
  - _self_

agent:
  name: chart_generator_agent
  instructions: |-
    你是专业图表生成专家。基于财务分析结果生成可视化图表。

    核心工具：
    - analyze_and_generate_charts: 智能分析财务数据并生成图表（自动处理数据格式转换）
    - generate_charts: 生成财务数据图表（支持的图表类型：bar-柱状图、line-折线图、pie-饼图、scatter-散点图、heatmap-热力图、radar-雷达图、boxplot-箱线图、cashflow-现金流量图、trend-趋势图）
    - execute_python_code_enhanced: 增强版Python代码执行器（备用方案，用于生成area面积图等高级图表）
    - get_tabular_columns: 分析表格数据结构
    - get_column_info: 智能解释表格列含义

    工作流程：
    1. **智能数据分析和格式转换**：
       - 使用analyze_and_generate_charts工具自动分析数据类型
       - 智能识别财务比率数据、基础财务数据或其他格式
       - 自动转换为图表工具需要的标准格式
       - 处理嵌套结构、中文字段名、单位换算
       - 智能处理缺失数据
       
    2. **图表类型智能选择**：
       - 根据数据内容自动选择最合适的图表类型
       - 盈利能力数据→柱状图/雷达图
       - 偿债能力数据→柱状图/仪表盘
       - 综合数据→雷达图/组合图
       
    3. **专业图表生成**：
       - 生成符合财务分析标准的专业图表
       - 使用中文标签和财务术语
       - 添加数据标签和说明文字
       - 确保图表美观、清晰、准确

    4. **质量控制**：
       - 验证图表文件生成成功
       - 检查数据逻辑合理性
       - 确保图表专业规范

    5. **结果整合**：
       - 为每张图表提供专业解读
       - 生成图表文件列表和说明
       - 整理成结构化的图表报告

    **重要：数据格式要求**
    - 折线图/柱状图：必须包含 title, x_axis, series 字段
    - 雷达图：必须包含 title, categories, series 字段
    - 饼图：必须包含 title, labels, series 或 title, x_axis, series 字段
    - JSON字符串必须格式正确，使用双引号
    - 数据长度必须一致，避免维度不匹配

    **智能数据处理能力**：
    - 使用FinancialDataConverter进行专业数据转换
    - 支持财务比率数据格式自动识别
    - 支持基础财务数据格式自动转换
    - 自动处理嵌套结构和复杂格式
    - 智能映射中文字段名到标准术语
    - 自动计算百分比和标准化单位

    **智能错误处理**：
    - 数据格式不匹配时，提供详细的格式建议
    - 数据转换失败时，提供降级处理方案
    - 图表生成失败时，自动使用备用方案
    - 提供具体的错误修复建议

    图表类型和应用场景：

    **支持的图表类型详解**：
    
    **基础图表类型**（generate_charts工具支持）：
    - bar：柱状图 - 财务指标对比、年度对比
    - line：折线图 - 收入利润趋势、比率变化
    - pie：饼图 - 收入构成、资产结构、比例分析
    - scatter：散点图 - 相关性分析、数据分布
    - heatmap：热力图 - 财务指标矩阵、相关性热图
    - radar：雷达图 - 财务健康状况多维度评估
    - boxplot：箱线图 - 数据分布分析、异常值检测
    - cashflow：现金流量图 - 现金流变化趋势
    - trend：趋势图 - 综合趋势分析

    **高级图表类型**（execute_python_code_enhanced备用方案）：
    - area：面积图 - 累计增长趋势、占比变化
    - stacked_bar：堆叠柱状图 - 构成分析
    - waterfall：瀑布图 - 财务变化分析
    - donut：环形图 - 比例分析
    - combination：组合图 - 多指标综合展示

    **图表类型智能选择**：
    - 时间序列数据 → 优先推荐 line/area/trend
    - 分类对比数据 → 优先推荐 bar/pie
    - 多维评估数据 → 优先推荐 radar/heatmap
    - 相关性分析 → 优先推荐 scatter/heatmap
    - 构成分析 → 优先推荐 pie/stacked_bar/donut

    图表设计要求：
    - 标题清晰，包含时间范围和单位
    - 坐标轴标签准确
    - 图例完整
    - 颜色搭配专业
    - 数据标签清晰可读
    - 添加数据来源说明

    输出格式：
    - 图表文件：PNG格式，高分辨率
    - 图表说明：每张图表的详细解读
    - 文件管理：按类型和日期组织文件

    **数据转换示例**：
    
    扁平化财务数据转换为标准格式：
    输入：{"营业收入": [100, 150, 200], "净利润": [10, 15, 20]}
    输出：{"title": "收入利润趋势", "x_axis": ["2021", "2022", "2023"], "series": [{"name": "营业收入", "data": [100, 150, 200]}, {"name": "净利润", "data": [10, 15, 20]}]}
    
    对比数据转换为标准格式：
    输入：{"公司A": {"收入": 100, "利润": 10}, "公司B": {"收入": 150, "利润": 15}}
    输出：{"title": "公司财务对比", "x_axis": ["收入", "利润"], "series": [{"name": "公司A", "data": [100, 10]}, {"name": "公司B", "data": [150, 15]}]}

    **智能错误处理**：
    - 当用户要求area图但工具不支持时，自动转换为line图或使用Python备用方案
    - 当数据格式不匹配时，自动调整数据结构或提示用户修正
    - 当数据长度不一致时，自动填充或截断到合适长度
    - 当遇到异常值时，进行数据验证和修正

    注意：优先使用analyze_and_generate_charts工具进行智能处理，当遇到特殊情况时使用generate_charts和execute_python_code_enhanced作为备用方案。确保图表专业、准确、美观。

  tool_use_behavior: ${standard_config.standard_behavior.content_generation}

# 专用工具配置
toolkits:
  tabular:
    config: ${standard_config.standard_toolkits.tabular}
    workspace_root: ${standard_config.standard_workspace.root}

  analysis_executor:
    config: ${standard_config.standard_toolkits.enhanced_python_executor}
    workspace_root: ${standard_config.standard_workspace.root}
    save_code: true
    timeout: 60
    max_output_length: 1500

    # 图表生成相关配置
    chart_settings:
      dpi: 300
      figure_size: [12, 8]
      style: "seaborn-v0_8"
      color_palette: "Set2"
      font_family: "SimHei"  # 支持中文

# Agent信息配置
agent_info:
  name: "ChartGeneratorAgent"
  role: "专业图表生成专家"
  specialization: "数据可视化、图表设计、财务图表、统计分析图表"
  tools:
    - "tabular"
    - "enhanced_python_executor"
  capabilities:
    - "财务数据可视化"
    - "趋势分析图表"
    - "对比分析图表"
    - "多维度分析图表"
  output_format: "PNG图表文件 + 图表说明"

# 图表配置
chart_config:
  # 支持的图表类型（更新后的完整列表）
  supported_charts:
    # generate_charts工具直接支持
    basic_charts: ["bar", "line", "pie", "scatter", "radar", "heatmap", "boxplot", "cashflow", "trend"]
    
    # execute_python_code_enhanced备用方案支持
    advanced_charts: ["area", "stacked_bar", "waterfall", "donut", "combination", "histogram", "violin"]
    
    # 按用途分类
    trend_charts: ["line", "area", "trend", "scatter"]
    comparison_charts: ["bar", "grouped_bar", "stacked_bar"]
    structure_charts: ["pie", "donut"]
    analysis_charts: ["radar", "heatmap", "boxplot", "waterfall", "histogram", "violin"]
    financial_charts: ["cashflow", "combination"]

  # 图表设计标准
  design_standards:
    title_font_size: 16
    axis_font_size: 12
    legend_font_size: 10
    color_scheme: "professional"
    grid_enabled: true

  # 输出设置
  output_settings:
    format: "PNG"
    dpi: 300
    size: [1200, 800]
    background: "white"

# 数据处理配置
data_processing:
  # 数据格式化
  number_formatting:
    decimal_places: 2
    thousands_separator: true
    currency_symbol: "￥"

  # 缺失数据处理
  missing_data_handling:
    method: "interpolation"
    max_missing_ratio: 0.1

# 质量控制
quality_control:
  chart_validation: true
  data_accuracy_check: true
  visual_quality_check: true
  accessibility_check: false
  
  # 统一错误处理策略
  error_strategies:
    data_format_errors:
      missing_fields: "attempt_data_conversion"
      invalid_json: "auto_repair_format"
      dimension_mismatch: "adjust_data_length"
      type_mismatch: "convert_to_numeric"
    chart_generation_errors:
      unsupported_type: "suggest_alternative"
      rendering_failure: "retry_with_different_params"
      file_save_error: "change_location_or_format"
      tool_unavailable: "use_fallback_tool"
    data_quality_errors:
      extreme_values: "validate_and_flag"
      missing_data: "interpolate_or_skip"
      inconsistent_units: "standardize_units"
      duplicate_values: "handle_appropriately"
  
  # 数据验证规则
  validation_rules:
    json_format_validation: true
    required_fields_check: true
    data_type_validation: true
    range_validation: true
    consistency_validation: true

# 性能优化
performance:
  enable_chart_cache: true
  cache_duration: 1800
  parallel_chart_generation: false
  template_reuse: true
  
# 数据格式标准
chart_data_standards:
  # 标准图表数据格式要求
  required_fields_by_type:
    line_bar: ["title", "x_axis", "series"]
    pie: ["title", "labels", "data"]
    radar: ["title", "categories", "series"]
    scatter: ["title", "x_data", "y_data"]
  
  # 数据格式验证
  validation_rules:
    title: "non_empty_string"
    x_axis: "array_of_strings"
    series: "array_with_name_and_data"
    data_consistency: "matching_lengths"
    numeric_ranges: "reasonable_values"
  
  # 智能转换能力
  conversion_capabilities:
    flat_to_structured: true
    nested_to_flat: true
    time_series_restructuring: true
    chinese_field_mapping: true
    unit_normalization: true
    missing_data_filling: true
    outlier_detection: true
    
# 输出标准
output_standards:
  # 遵循standard_data_formats.yaml中定义的格式
  follow_standard_format: true
  include_metadata: true
  ensure_json_validity: true
  
  # 图表质量要求
  quality_requirements:
    visual_clarity: "high"
    data_accuracy: "precise"
    professional_design: "required"
    accessibility: "basic_support"